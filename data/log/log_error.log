25-03-02.20:23:36.621 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-03-02.20:23:40.566 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-03-02.20:29:00.723 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-03-02.20:29:03.783 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-03-02.20:33:36.415 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-03-02.20:33:39.495 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-03-02.20:35:22.052 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-03-02.20:35:24.927 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-03-02.20:45:18.869 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-03-02.20:45:21.985 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-03-02.20:46:58.780 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-03-02.20:47:01.774 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-03-02.20:47:35.804 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 21033ms for session id 0x1000000ccff000c
25-03-02.20:47:35.809 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x1000000ccff000c for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 21033ms for session id 0x1000000ccff000c
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
25-03-02.20:47:36.951 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Unable to reconnect to ZooKeeper service, session 0x1000000ccff000c has expired
25-03-02.20:47:36.951 [main-EventThread] WARN  ConnectionState        - Session expired event received
25-03-02.20:47:36.952 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x1000000ccff000c for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x1000000ccff000c has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1406)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:84)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:348)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1262)
25-03-02.20:49:32.110 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 97107ms for session id 0x1000000ccff000d
25-03-02.20:49:32.111 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m56s306ms768Âµs800ns).
25-03-02.20:49:32.111 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x1000000ccff000d for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 97107ms for session id 0x1000000ccff000d
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
25-03-02.20:49:33.726 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Unable to reconnect to ZooKeeper service, session 0x1000000ccff000d has expired
25-03-02.20:49:33.726 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x1000000ccff000d for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x1000000ccff000d has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1406)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:84)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:348)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1262)
25-03-02.20:49:33.726 [main-EventThread] WARN  ConnectionState        - Session expired event received
25-03-02.20:51:30.643 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-03-02.20:51:33.468 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
