25-01-31.17:50:23.894 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.17:50:28.897 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.17:50:48.267 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 22453ms for session id 0x1000000d4730002
25-01-31.17:50:48.267 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=48s253ms642µs600ns).
25-01-31.17:50:59.532 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x1000000d4730002 for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 22453ms for session id 0x1000000d4730002
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
25-01-31.17:51:55.105 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.17:51:59.513 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.17:59:58.176 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:00:02.231 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.18:02:20.539 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:02:24.582 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.18:03:38.856 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:03:42.427 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.18:04:04.038 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:04:08.092 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.18:04:22.122 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 16679ms for session id 0x1000000d4730007
25-01-31.18:04:22.134 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x1000000d4730007 for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 16679ms for session id 0x1000000d4730007
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
25-01-31.18:05:03.823 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:05:07.987 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.18:05:34.346 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 29134ms for session id 0x1000000d4730008
25-01-31.18:05:34.346 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=55s610ms400µs600ns).
25-01-31.18:05:34.351 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x1000000d4730008 for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 29134ms for session id 0x1000000d4730008
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
25-01-31.18:05:45.714 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Unable to reconnect to ZooKeeper service, session 0x1000000d4730008 has expired
25-01-31.18:05:45.715 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - An exception was thrown while closing send thread for session 0x1000000d4730008.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x1000000d4730008 has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1406)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:84)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:348)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1262)
25-01-31.18:07:15.403 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:07:19.545 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.18:08:23.897 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:08:27.532 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-01-31.18:09:44.777 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-01-31.18:09:48.911 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
