25-02-01.15:01:00.350 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-02-01.15:01:04.124 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-02-01.15:05:23.297 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-02-01.15:05:27.020 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-02-01.15:05:58.572 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-02-01.15:06:02.601 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-02-01.15:06:14.130 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 14148ms for session id 0x10000007edd0005
25-02-01.15:06:14.136 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x10000007edd0005 for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 14148ms for session id 0x10000007edd0005
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
25-02-01.15:07:01.999 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-02-01.15:07:06.241 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
25-02-01.15:07:22.852 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 19468ms for session id 0x10000007edd0006
25-02-01.15:07:22.852 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45s903ms347Âµs900ns).
25-02-01.15:07:22.858 [main-SendThread(192.168.136.129:2181)] WARN  ClientCnxn             - Session 0x10000007edd0006 for sever 192.168.136.129/192.168.136.129:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 19468ms for session id 0x10000007edd0006
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
25-02-01.15:07:45.984 [main            ] WARN  CuratorZookeeperClient - session timeout [18000] is less than connection timeout [30000]
25-02-01.15:07:49.630 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
